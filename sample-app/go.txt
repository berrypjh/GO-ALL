# Go 언어
## Go 언어의 탄생
Go 는 Google 이 만든 프로그래밍 언어이고 Go 를 만들기 위해
Google 은 컴퓨터 분야의 거물급인 Rob Pike, Ken Thompson, Robert Griesemer 를 영입했습니다.

이 사람들은 B 언어, C 언어, 유닉스, 유닉스 운영체계 그리고 UTF-8 을 만드는 데 기여한 사람들입니다.

Google 은 모든 다른 프로그래밍 언어를 돌아보고
Google 의 수요를 충족시키는 프로그래밍 언어는 없다는 결론을 내렸습니다.

그래서 새로운 언어를 만들어야했습니다.

## Go 프로그래밍을 왜 만들었나?
2006년 경에 최초로 듀얼 코어 프로세서가 소비자용으로 상용화되었습니다.
그때까지는 모든 프로그래밍 언어가 싱글 코어, 싱글 CPU 를 활용하도록 제작되었습니다.

이렇게 2006년 경에 최초의 듀얼코어 프로세서가 나왔고 멀티코어를 내부적으로 쉽게 활용하도록 설계된 프로그래밍 언어는 없었습니다.

Google 은 그걸 위해 2009년에 언어를 만들기 시작했고
2012년 3월에 오픈 소스 언어의 안정화된 버전 1 을 배포했습니다.

Go 는 내부적으로 멀티코어를 쉽게 활용하도록 제작되었습니다.
컴퓨터 한 대의 멀티코어나 다수의 컴퓨터에 있는 멀티코어를 지원합니다. 그리고 병렬 연산을 합니다.
동시 실행 설계 패턴과 병렬 연산을 아주 잘 해냅니다.

## Go 프로그래밍 언어의 세 가지 목표
golang.org 로 가면 자주하는 질문이 있고 새로운 언어를 만든 이유를 읽어볼 수 있습니다

## Go 는 어디에 좋을까요?
Go 는 Google 이 하는 것, 즉 스케일링된 웹 서비스에 좋습니다
그 분야에 Go 가 아주 좋고요, Google 은 많은 인프라를 Go 로 다시 작성하고 있고요
YouTube도 이미 Go로 완전히 다시 작성되었습니다

네트워킹에 좋고 동시성과 병렬성에 좋고, 컴퓨터의 멀티 CPU 와 멀티코어를 활용할 수 있습니다
Go는 훌륭한 시스템 수준 프로그래밍 언어고요

자동화나 명령줄 도구에 좋습니다

암호화폐에도 좋습니다

Go가 유용한 분야는 정말 많은데, 이건 그냥 그 일부분일 뿐입니다

이미지 처리도 할 수 있습니다.

## Go 언어의 기본 원칙
표현력 있고 이해하기 쉬우며 정교하고 깔끔하며 명확하고
가독성 높은 언어를 지향합니다.

## Go 의 장점
Go는 컴파일러형 언어고 가비지 컬렉터가 있습니다.
네트워크 환경에서 잘 작동합니다.
구문이 깔끔합니다
강력한 표준 라이브러리가 있습니다.
미리 작성되어 있는 코드가 아주 많습니다.
이식성이 높기 때문에 Windows에서 코드를 작성하고 리눅스로 컴파일하고 리눅스 실행 파일을 만들 수 있습니다.
